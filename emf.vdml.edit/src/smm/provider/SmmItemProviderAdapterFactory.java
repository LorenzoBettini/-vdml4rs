/**
 */
package smm.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import smm.util.SmmAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class SmmItemProviderAdapterFactory extends SmmAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public SmmItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.Attribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeItemProvider attributeItemProvider;

	/**
	 * This creates an adapter for a {@link smm.Attribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeAdapter() {
		if (attributeItemProvider == null) {
			attributeItemProvider = new AttributeItemProvider(this);
		}

		return attributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.Annotation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnnotationItemProvider annotationItemProvider;

	/**
	 * This creates an adapter for a {@link smm.Annotation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnnotationAdapter() {
		if (annotationItemProvider == null) {
			annotationItemProvider = new AnnotationItemProvider(this);
		}

		return annotationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.Argument} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArgumentItemProvider argumentItemProvider;

	/**
	 * This creates an adapter for a {@link smm.Argument}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArgumentAdapter() {
		if (argumentItemProvider == null) {
			argumentItemProvider = new ArgumentItemProvider(this);
		}

		return argumentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.Base1MeasureRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Base1MeasureRelationshipItemProvider base1MeasureRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link smm.Base1MeasureRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBase1MeasureRelationshipAdapter() {
		if (base1MeasureRelationshipItemProvider == null) {
			base1MeasureRelationshipItemProvider = new Base1MeasureRelationshipItemProvider(this);
		}

		return base1MeasureRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.Operation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationItemProvider operationItemProvider;

	/**
	 * This creates an adapter for a {@link smm.Operation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationAdapter() {
		if (operationItemProvider == null) {
			operationItemProvider = new OperationItemProvider(this);
		}

		return operationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.BinaryMeasure} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BinaryMeasureItemProvider binaryMeasureItemProvider;

	/**
	 * This creates an adapter for a {@link smm.BinaryMeasure}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBinaryMeasureAdapter() {
		if (binaryMeasureItemProvider == null) {
			binaryMeasureItemProvider = new BinaryMeasureItemProvider(this);
		}

		return binaryMeasureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.DimensionalMeasure} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DimensionalMeasureItemProvider dimensionalMeasureItemProvider;

	/**
	 * This creates an adapter for a {@link smm.DimensionalMeasure}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDimensionalMeasureAdapter() {
		if (dimensionalMeasureItemProvider == null) {
			dimensionalMeasureItemProvider = new DimensionalMeasureItemProvider(this);
		}

		return dimensionalMeasureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.MeasureCategory} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MeasureCategoryItemProvider measureCategoryItemProvider;

	/**
	 * This creates an adapter for a {@link smm.MeasureCategory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMeasureCategoryAdapter() {
		if (measureCategoryItemProvider == null) {
			measureCategoryItemProvider = new MeasureCategoryItemProvider(this);
		}

		return measureCategoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.RefinementMeasureRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RefinementMeasureRelationshipItemProvider refinementMeasureRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link smm.RefinementMeasureRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRefinementMeasureRelationshipAdapter() {
		if (refinementMeasureRelationshipItemProvider == null) {
			refinementMeasureRelationshipItemProvider = new RefinementMeasureRelationshipItemProvider(this);
		}

		return refinementMeasureRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.EquivalentMeasureRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EquivalentMeasureRelationshipItemProvider equivalentMeasureRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link smm.EquivalentMeasureRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEquivalentMeasureRelationshipAdapter() {
		if (equivalentMeasureRelationshipItemProvider == null) {
			equivalentMeasureRelationshipItemProvider = new EquivalentMeasureRelationshipItemProvider(this);
		}

		return equivalentMeasureRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.BaseMeasureRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaseMeasureRelationshipItemProvider baseMeasureRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link smm.BaseMeasureRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBaseMeasureRelationshipAdapter() {
		if (baseMeasureRelationshipItemProvider == null) {
			baseMeasureRelationshipItemProvider = new BaseMeasureRelationshipItemProvider(this);
		}

		return baseMeasureRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.CollectiveMeasure} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CollectiveMeasureItemProvider collectiveMeasureItemProvider;

	/**
	 * This creates an adapter for a {@link smm.CollectiveMeasure}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCollectiveMeasureAdapter() {
		if (collectiveMeasureItemProvider == null) {
			collectiveMeasureItemProvider = new CollectiveMeasureItemProvider(this);
		}

		return collectiveMeasureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.Base2MeasureRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Base2MeasureRelationshipItemProvider base2MeasureRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link smm.Base2MeasureRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBase2MeasureRelationshipAdapter() {
		if (base2MeasureRelationshipItemProvider == null) {
			base2MeasureRelationshipItemProvider = new Base2MeasureRelationshipItemProvider(this);
		}

		return base2MeasureRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.RescaleMeasureRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RescaleMeasureRelationshipItemProvider rescaleMeasureRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link smm.RescaleMeasureRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRescaleMeasureRelationshipAdapter() {
		if (rescaleMeasureRelationshipItemProvider == null) {
			rescaleMeasureRelationshipItemProvider = new RescaleMeasureRelationshipItemProvider(this);
		}

		return rescaleMeasureRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.RescaledMeasure} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RescaledMeasureItemProvider rescaledMeasureItemProvider;

	/**
	 * This creates an adapter for a {@link smm.RescaledMeasure}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRescaledMeasureAdapter() {
		if (rescaledMeasureItemProvider == null) {
			rescaledMeasureItemProvider = new RescaledMeasureItemProvider(this);
		}

		return rescaledMeasureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.RankingMeasureRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RankingMeasureRelationshipItemProvider rankingMeasureRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link smm.RankingMeasureRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRankingMeasureRelationshipAdapter() {
		if (rankingMeasureRelationshipItemProvider == null) {
			rankingMeasureRelationshipItemProvider = new RankingMeasureRelationshipItemProvider(this);
		}

		return rankingMeasureRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.Base1MeasurementRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Base1MeasurementRelationshipItemProvider base1MeasurementRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link smm.Base1MeasurementRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBase1MeasurementRelationshipAdapter() {
		if (base1MeasurementRelationshipItemProvider == null) {
			base1MeasurementRelationshipItemProvider = new Base1MeasurementRelationshipItemProvider(this);
		}

		return base1MeasurementRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.BinaryMeasurement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BinaryMeasurementItemProvider binaryMeasurementItemProvider;

	/**
	 * This creates an adapter for a {@link smm.BinaryMeasurement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBinaryMeasurementAdapter() {
		if (binaryMeasurementItemProvider == null) {
			binaryMeasurementItemProvider = new BinaryMeasurementItemProvider(this);
		}

		return binaryMeasurementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.RefinementMeasurementRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RefinementMeasurementRelationshipItemProvider refinementMeasurementRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link smm.RefinementMeasurementRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRefinementMeasurementRelationshipAdapter() {
		if (refinementMeasurementRelationshipItemProvider == null) {
			refinementMeasurementRelationshipItemProvider = new RefinementMeasurementRelationshipItemProvider(this);
		}

		return refinementMeasurementRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.EquivalentMeasurementRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EquivalentMeasurementRelationshipItemProvider equivalentMeasurementRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link smm.EquivalentMeasurementRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEquivalentMeasurementRelationshipAdapter() {
		if (equivalentMeasurementRelationshipItemProvider == null) {
			equivalentMeasurementRelationshipItemProvider = new EquivalentMeasurementRelationshipItemProvider(this);
		}

		return equivalentMeasurementRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.RecursiveMeasurementRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RecursiveMeasurementRelationshipItemProvider recursiveMeasurementRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link smm.RecursiveMeasurementRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRecursiveMeasurementRelationshipAdapter() {
		if (recursiveMeasurementRelationshipItemProvider == null) {
			recursiveMeasurementRelationshipItemProvider = new RecursiveMeasurementRelationshipItemProvider(this);
		}

		return recursiveMeasurementRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.BaseMeasurementRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaseMeasurementRelationshipItemProvider baseMeasurementRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link smm.BaseMeasurementRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBaseMeasurementRelationshipAdapter() {
		if (baseMeasurementRelationshipItemProvider == null) {
			baseMeasurementRelationshipItemProvider = new BaseMeasurementRelationshipItemProvider(this);
		}

		return baseMeasurementRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.CollectiveMeasurement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CollectiveMeasurementItemProvider collectiveMeasurementItemProvider;

	/**
	 * This creates an adapter for a {@link smm.CollectiveMeasurement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCollectiveMeasurementAdapter() {
		if (collectiveMeasurementItemProvider == null) {
			collectiveMeasurementItemProvider = new CollectiveMeasurementItemProvider(this);
		}

		return collectiveMeasurementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.Base2MeasurementRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Base2MeasurementRelationshipItemProvider base2MeasurementRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link smm.Base2MeasurementRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBase2MeasurementRelationshipAdapter() {
		if (base2MeasurementRelationshipItemProvider == null) {
			base2MeasurementRelationshipItemProvider = new Base2MeasurementRelationshipItemProvider(this);
		}

		return base2MeasurementRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.RescaleMeasurementRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RescaleMeasurementRelationshipItemProvider rescaleMeasurementRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link smm.RescaleMeasurementRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRescaleMeasurementRelationshipAdapter() {
		if (rescaleMeasurementRelationshipItemProvider == null) {
			rescaleMeasurementRelationshipItemProvider = new RescaleMeasurementRelationshipItemProvider(this);
		}

		return rescaleMeasurementRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.RescaledMeasurement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RescaledMeasurementItemProvider rescaledMeasurementItemProvider;

	/**
	 * This creates an adapter for a {@link smm.RescaledMeasurement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRescaledMeasurementAdapter() {
		if (rescaledMeasurementItemProvider == null) {
			rescaledMeasurementItemProvider = new RescaledMeasurementItemProvider(this);
		}

		return rescaledMeasurementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.RankingMeasurementRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RankingMeasurementRelationshipItemProvider rankingMeasurementRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link smm.RankingMeasurementRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRankingMeasurementRelationshipAdapter() {
		if (rankingMeasurementRelationshipItemProvider == null) {
			rankingMeasurementRelationshipItemProvider = new RankingMeasurementRelationshipItemProvider(this);
		}

		return rankingMeasurementRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.CategoryRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CategoryRelationshipItemProvider categoryRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link smm.CategoryRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCategoryRelationshipAdapter() {
		if (categoryRelationshipItemProvider == null) {
			categoryRelationshipItemProvider = new CategoryRelationshipItemProvider(this);
		}

		return categoryRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.Characteristic} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CharacteristicItemProvider characteristicItemProvider;

	/**
	 * This creates an adapter for a {@link smm.Characteristic}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCharacteristicAdapter() {
		if (characteristicItemProvider == null) {
			characteristicItemProvider = new CharacteristicItemProvider(this);
		}

		return characteristicItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.Count} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CountItemProvider countItemProvider;

	/**
	 * This creates an adapter for a {@link smm.Count}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCountAdapter() {
		if (countItemProvider == null) {
			countItemProvider = new CountItemProvider(this);
		}

		return countItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.DirectMeasurement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DirectMeasurementItemProvider directMeasurementItemProvider;

	/**
	 * This creates an adapter for a {@link smm.DirectMeasurement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDirectMeasurementAdapter() {
		if (directMeasurementItemProvider == null) {
			directMeasurementItemProvider = new DirectMeasurementItemProvider(this);
		}

		return directMeasurementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.Counting} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CountingItemProvider countingItemProvider;

	/**
	 * This creates an adapter for a {@link smm.Counting}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCountingAdapter() {
		if (countingItemProvider == null) {
			countingItemProvider = new CountingItemProvider(this);
		}

		return countingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.DirectMeasure} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DirectMeasureItemProvider directMeasureItemProvider;

	/**
	 * This creates an adapter for a {@link smm.DirectMeasure}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDirectMeasureAdapter() {
		if (directMeasureItemProvider == null) {
			directMeasureItemProvider = new DirectMeasureItemProvider(this);
		}

		return directMeasureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.Grade} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GradeItemProvider gradeItemProvider;

	/**
	 * This creates an adapter for a {@link smm.Grade}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGradeAdapter() {
		if (gradeItemProvider == null) {
			gradeItemProvider = new GradeItemProvider(this);
		}

		return gradeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.MeasureLibrary} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MeasureLibraryItemProvider measureLibraryItemProvider;

	/**
	 * This creates an adapter for a {@link smm.MeasureLibrary}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMeasureLibraryAdapter() {
		if (measureLibraryItemProvider == null) {
			measureLibraryItemProvider = new MeasureLibraryItemProvider(this);
		}

		return measureLibraryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.MofElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MofElementItemProvider mofElementItemProvider;

	/**
	 * This creates an adapter for a {@link smm.MofElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMofElementAdapter() {
		if (mofElementItemProvider == null) {
			mofElementItemProvider = new MofElementItemProvider(this);
		}

		return mofElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.NamedMeasure} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NamedMeasureItemProvider namedMeasureItemProvider;

	/**
	 * This creates an adapter for a {@link smm.NamedMeasure}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNamedMeasureAdapter() {
		if (namedMeasureItemProvider == null) {
			namedMeasureItemProvider = new NamedMeasureItemProvider(this);
		}

		return namedMeasureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.NamedMeasurement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NamedMeasurementItemProvider namedMeasurementItemProvider;

	/**
	 * This creates an adapter for a {@link smm.NamedMeasurement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNamedMeasurementAdapter() {
		if (namedMeasurementItemProvider == null) {
			namedMeasurementItemProvider = new NamedMeasurementItemProvider(this);
		}

		return namedMeasurementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.OclOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OclOperationItemProvider oclOperationItemProvider;

	/**
	 * This creates an adapter for a {@link smm.OclOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOclOperationAdapter() {
		if (oclOperationItemProvider == null) {
			oclOperationItemProvider = new OclOperationItemProvider(this);
		}

		return oclOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.Observation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObservationItemProvider observationItemProvider;

	/**
	 * This creates an adapter for a {@link smm.Observation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObservationAdapter() {
		if (observationItemProvider == null) {
			observationItemProvider = new ObservationItemProvider(this);
		}

		return observationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.ObservationScope} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObservationScopeItemProvider observationScopeItemProvider;

	/**
	 * This creates an adapter for a {@link smm.ObservationScope}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObservationScopeAdapter() {
		if (observationScopeItemProvider == null) {
			observationScopeItemProvider = new ObservationScopeItemProvider(this);
		}

		return observationScopeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.ObservedMeasure} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObservedMeasureItemProvider observedMeasureItemProvider;

	/**
	 * This creates an adapter for a {@link smm.ObservedMeasure}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObservedMeasureAdapter() {
		if (observedMeasureItemProvider == null) {
			observedMeasureItemProvider = new ObservedMeasureItemProvider(this);
		}

		return observedMeasureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.Ranking} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RankingItemProvider rankingItemProvider;

	/**
	 * This creates an adapter for a {@link smm.Ranking}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRankingAdapter() {
		if (rankingItemProvider == null) {
			rankingItemProvider = new RankingItemProvider(this);
		}

		return rankingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.RankingInterval} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RankingIntervalItemProvider rankingIntervalItemProvider;

	/**
	 * This creates an adapter for a {@link smm.RankingInterval}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRankingIntervalAdapter() {
		if (rankingIntervalItemProvider == null) {
			rankingIntervalItemProvider = new RankingIntervalItemProvider(this);
		}

		return rankingIntervalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.RatioMeasure} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RatioMeasureItemProvider ratioMeasureItemProvider;

	/**
	 * This creates an adapter for a {@link smm.RatioMeasure}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRatioMeasureAdapter() {
		if (ratioMeasureItemProvider == null) {
			ratioMeasureItemProvider = new RatioMeasureItemProvider(this);
		}

		return ratioMeasureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.RatioMeasurement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RatioMeasurementItemProvider ratioMeasurementItemProvider;

	/**
	 * This creates an adapter for a {@link smm.RatioMeasurement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRatioMeasurementAdapter() {
		if (ratioMeasurementItemProvider == null) {
			ratioMeasurementItemProvider = new RatioMeasurementItemProvider(this);
		}

		return ratioMeasurementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.RecursiveMeasureRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RecursiveMeasureRelationshipItemProvider recursiveMeasureRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link smm.RecursiveMeasureRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRecursiveMeasureRelationshipAdapter() {
		if (recursiveMeasureRelationshipItemProvider == null) {
			recursiveMeasureRelationshipItemProvider = new RecursiveMeasureRelationshipItemProvider(this);
		}

		return recursiveMeasureRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.Scope} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScopeItemProvider scopeItemProvider;

	/**
	 * This creates an adapter for a {@link smm.Scope}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScopeAdapter() {
		if (scopeItemProvider == null) {
			scopeItemProvider = new ScopeItemProvider(this);
		}

		return scopeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link smm.SmmModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SmmModelItemProvider smmModelItemProvider;

	/**
	 * This creates an adapter for a {@link smm.SmmModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSmmModelAdapter() {
		if (smmModelItemProvider == null) {
			smmModelItemProvider = new SmmModelItemProvider(this);
		}

		return smmModelItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (attributeItemProvider != null) attributeItemProvider.dispose();
		if (annotationItemProvider != null) annotationItemProvider.dispose();
		if (argumentItemProvider != null) argumentItemProvider.dispose();
		if (base1MeasureRelationshipItemProvider != null) base1MeasureRelationshipItemProvider.dispose();
		if (operationItemProvider != null) operationItemProvider.dispose();
		if (binaryMeasureItemProvider != null) binaryMeasureItemProvider.dispose();
		if (dimensionalMeasureItemProvider != null) dimensionalMeasureItemProvider.dispose();
		if (measureCategoryItemProvider != null) measureCategoryItemProvider.dispose();
		if (refinementMeasureRelationshipItemProvider != null) refinementMeasureRelationshipItemProvider.dispose();
		if (equivalentMeasureRelationshipItemProvider != null) equivalentMeasureRelationshipItemProvider.dispose();
		if (baseMeasureRelationshipItemProvider != null) baseMeasureRelationshipItemProvider.dispose();
		if (collectiveMeasureItemProvider != null) collectiveMeasureItemProvider.dispose();
		if (base2MeasureRelationshipItemProvider != null) base2MeasureRelationshipItemProvider.dispose();
		if (rescaleMeasureRelationshipItemProvider != null) rescaleMeasureRelationshipItemProvider.dispose();
		if (rescaledMeasureItemProvider != null) rescaledMeasureItemProvider.dispose();
		if (rankingMeasureRelationshipItemProvider != null) rankingMeasureRelationshipItemProvider.dispose();
		if (base1MeasurementRelationshipItemProvider != null) base1MeasurementRelationshipItemProvider.dispose();
		if (binaryMeasurementItemProvider != null) binaryMeasurementItemProvider.dispose();
		if (refinementMeasurementRelationshipItemProvider != null) refinementMeasurementRelationshipItemProvider.dispose();
		if (equivalentMeasurementRelationshipItemProvider != null) equivalentMeasurementRelationshipItemProvider.dispose();
		if (recursiveMeasurementRelationshipItemProvider != null) recursiveMeasurementRelationshipItemProvider.dispose();
		if (baseMeasurementRelationshipItemProvider != null) baseMeasurementRelationshipItemProvider.dispose();
		if (collectiveMeasurementItemProvider != null) collectiveMeasurementItemProvider.dispose();
		if (base2MeasurementRelationshipItemProvider != null) base2MeasurementRelationshipItemProvider.dispose();
		if (rescaleMeasurementRelationshipItemProvider != null) rescaleMeasurementRelationshipItemProvider.dispose();
		if (rescaledMeasurementItemProvider != null) rescaledMeasurementItemProvider.dispose();
		if (rankingMeasurementRelationshipItemProvider != null) rankingMeasurementRelationshipItemProvider.dispose();
		if (categoryRelationshipItemProvider != null) categoryRelationshipItemProvider.dispose();
		if (characteristicItemProvider != null) characteristicItemProvider.dispose();
		if (countItemProvider != null) countItemProvider.dispose();
		if (directMeasurementItemProvider != null) directMeasurementItemProvider.dispose();
		if (countingItemProvider != null) countingItemProvider.dispose();
		if (directMeasureItemProvider != null) directMeasureItemProvider.dispose();
		if (gradeItemProvider != null) gradeItemProvider.dispose();
		if (measureLibraryItemProvider != null) measureLibraryItemProvider.dispose();
		if (mofElementItemProvider != null) mofElementItemProvider.dispose();
		if (namedMeasureItemProvider != null) namedMeasureItemProvider.dispose();
		if (namedMeasurementItemProvider != null) namedMeasurementItemProvider.dispose();
		if (oclOperationItemProvider != null) oclOperationItemProvider.dispose();
		if (observationItemProvider != null) observationItemProvider.dispose();
		if (observationScopeItemProvider != null) observationScopeItemProvider.dispose();
		if (observedMeasureItemProvider != null) observedMeasureItemProvider.dispose();
		if (rankingItemProvider != null) rankingItemProvider.dispose();
		if (rankingIntervalItemProvider != null) rankingIntervalItemProvider.dispose();
		if (ratioMeasureItemProvider != null) ratioMeasureItemProvider.dispose();
		if (ratioMeasurementItemProvider != null) ratioMeasurementItemProvider.dispose();
		if (recursiveMeasureRelationshipItemProvider != null) recursiveMeasureRelationshipItemProvider.dispose();
		if (scopeItemProvider != null) scopeItemProvider.dispose();
		if (smmModelItemProvider != null) smmModelItemProvider.dispose();
	}

}
