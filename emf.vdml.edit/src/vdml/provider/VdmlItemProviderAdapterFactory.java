/**
 */
package vdml.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import vdml.util.VdmlAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class VdmlItemProviderAdapterFactory extends VdmlAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public VdmlItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.ValueDeliveryModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueDeliveryModelItemProvider valueDeliveryModelItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.ValueDeliveryModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueDeliveryModelAdapter() {
		if (valueDeliveryModelItemProvider == null) {
			valueDeliveryModelItemProvider = new ValueDeliveryModelItemProvider(this);
		}

		return valueDeliveryModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.String} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringItemProvider stringItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.String}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringAdapter() {
		if (stringItemProvider == null) {
			stringItemProvider = new StringItemProvider(this);
		}

		return stringItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.Attribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeItemProvider attributeItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.Attribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeAdapter() {
		if (attributeItemProvider == null) {
			attributeItemProvider = new AttributeItemProvider(this);
		}

		return attributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.Annotation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnnotationItemProvider annotationItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.Annotation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnnotationAdapter() {
		if (annotationItemProvider == null) {
			annotationItemProvider = new AnnotationItemProvider(this);
		}

		return annotationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.ValueLibrary} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueLibraryItemProvider valueLibraryItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.ValueLibrary}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueLibraryAdapter() {
		if (valueLibraryItemProvider == null) {
			valueLibraryItemProvider = new ValueLibraryItemProvider(this);
		}

		return valueLibraryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.ValueDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueDefinitionItemProvider valueDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.ValueDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueDefinitionAdapter() {
		if (valueDefinitionItemProvider == null) {
			valueDefinitionItemProvider = new ValueDefinitionItemProvider(this);
		}

		return valueDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.ValueCategory} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueCategoryItemProvider valueCategoryItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.ValueCategory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueCategoryAdapter() {
		if (valueCategoryItemProvider == null) {
			valueCategoryItemProvider = new ValueCategoryItemProvider(this);
		}

		return valueCategoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.CapabilityLibrary} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CapabilityLibraryItemProvider capabilityLibraryItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.CapabilityLibrary}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCapabilityLibraryAdapter() {
		if (capabilityLibraryItemProvider == null) {
			capabilityLibraryItemProvider = new CapabilityLibraryItemProvider(this);
		}

		return capabilityLibraryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.CapabilityDependency} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CapabilityDependencyItemProvider capabilityDependencyItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.CapabilityDependency}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCapabilityDependencyAdapter() {
		if (capabilityDependencyItemProvider == null) {
			capabilityDependencyItemProvider = new CapabilityDependencyItemProvider(this);
		}

		return capabilityDependencyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.BusinessItemDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessItemDefinitionItemProvider businessItemDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.BusinessItemDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBusinessItemDefinitionAdapter() {
		if (businessItemDefinitionItemProvider == null) {
			businessItemDefinitionItemProvider = new BusinessItemDefinitionItemProvider(this);
		}

		return businessItemDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.PracticeDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PracticeDefinitionItemProvider practiceDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.PracticeDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPracticeDefinitionAdapter() {
		if (practiceDefinitionItemProvider == null) {
			practiceDefinitionItemProvider = new PracticeDefinitionItemProvider(this);
		}

		return practiceDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.PracticeCategory} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PracticeCategoryItemProvider practiceCategoryItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.PracticeCategory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPracticeCategoryAdapter() {
		if (practiceCategoryItemProvider == null) {
			practiceCategoryItemProvider = new PracticeCategoryItemProvider(this);
		}

		return practiceCategoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.CapabilityDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CapabilityDefinitionItemProvider capabilityDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.CapabilityDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCapabilityDefinitionAdapter() {
		if (capabilityDefinitionItemProvider == null) {
			capabilityDefinitionItemProvider = new CapabilityDefinitionItemProvider(this);
		}

		return capabilityDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.BusinessItemCategory} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessItemCategoryItemProvider businessItemCategoryItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.BusinessItemCategory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBusinessItemCategoryAdapter() {
		if (businessItemCategoryItemProvider == null) {
			businessItemCategoryItemProvider = new BusinessItemCategoryItemProvider(this);
		}

		return businessItemCategoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.BusinessItemLibrary} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessItemLibraryItemProvider businessItemLibraryItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.BusinessItemLibrary}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBusinessItemLibraryAdapter() {
		if (businessItemLibraryItemProvider == null) {
			businessItemLibraryItemProvider = new BusinessItemLibraryItemProvider(this);
		}

		return businessItemLibraryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.Actor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActorItemProvider actorItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.Actor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActorAdapter() {
		if (actorItemProvider == null) {
			actorItemProvider = new ActorItemProvider(this);
		}

		return actorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.MeasuredCharacteristic} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MeasuredCharacteristicItemProvider measuredCharacteristicItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.MeasuredCharacteristic}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMeasuredCharacteristicAdapter() {
		if (measuredCharacteristicItemProvider == null) {
			measuredCharacteristicItemProvider = new MeasuredCharacteristicItemProvider(this);
		}

		return measuredCharacteristicItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.Assignment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssignmentItemProvider assignmentItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.Assignment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssignmentAdapter() {
		if (assignmentItemProvider == null) {
			assignmentItemProvider = new AssignmentItemProvider(this);
		}

		return assignmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.Role} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleItemProvider roleItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.Role}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleAdapter() {
		if (roleItemProvider == null) {
			roleItemProvider = new RoleItemProvider(this);
		}

		return roleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.Activity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActivityItemProvider activityItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.Activity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActivityAdapter() {
		if (activityItemProvider == null) {
			activityItemProvider = new ActivityItemProvider(this);
		}

		return activityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.Expression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExpressionItemProvider expressionItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.Expression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExpressionAdapter() {
		if (expressionItemProvider == null) {
			expressionItemProvider = new ExpressionItemProvider(this);
		}

		return expressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.Operand} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperandItemProvider operandItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.Operand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperandAdapter() {
		if (operandItemProvider == null) {
			operandItemProvider = new OperandItemProvider(this);
		}

		return operandItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.Goal} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GoalItemProvider goalItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.Goal}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGoalAdapter() {
		if (goalItemProvider == null) {
			goalItemProvider = new GoalItemProvider(this);
		}

		return goalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.ResourceUse} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResourceUseItemProvider resourceUseItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.ResourceUse}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResourceUseAdapter() {
		if (resourceUseItemProvider == null) {
			resourceUseItemProvider = new ResourceUseItemProvider(this);
		}

		return resourceUseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.OutputPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutputPortItemProvider outputPortItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.OutputPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutputPortAdapter() {
		if (outputPortItemProvider == null) {
			outputPortItemProvider = new OutputPortItemProvider(this);
		}

		return outputPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.DeliverableFlow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeliverableFlowItemProvider deliverableFlowItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.DeliverableFlow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeliverableFlowAdapter() {
		if (deliverableFlowItemProvider == null) {
			deliverableFlowItemProvider = new DeliverableFlowItemProvider(this);
		}

		return deliverableFlowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.InputPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InputPortItemProvider inputPortItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.InputPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInputPortAdapter() {
		if (inputPortItemProvider == null) {
			inputPortItemProvider = new InputPortItemProvider(this);
		}

		return inputPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.InputDelegation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InputDelegationItemProvider inputDelegationItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.InputDelegation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInputDelegationAdapter() {
		if (inputDelegationItemProvider == null) {
			inputDelegationItemProvider = new InputDelegationItemProvider(this);
		}

		return inputDelegationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.BusinessItem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessItemItemProvider businessItemItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.BusinessItem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBusinessItemAdapter() {
		if (businessItemItemProvider == null) {
			businessItemItemProvider = new BusinessItemItemProvider(this);
		}

		return businessItemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.Store} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StoreItemProvider storeItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.Store}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStoreAdapter() {
		if (storeItemProvider == null) {
			storeItemProvider = new StoreItemProvider(this);
		}

		return storeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.OrgUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrgUnitItemProvider orgUnitItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.OrgUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrgUnitAdapter() {
		if (orgUnitItemProvider == null) {
			orgUnitItemProvider = new OrgUnitItemProvider(this);
		}

		return orgUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.Collaboration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CollaborationItemProvider collaborationItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.Collaboration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCollaborationAdapter() {
		if (collaborationItemProvider == null) {
			collaborationItemProvider = new CollaborationItemProvider(this);
		}

		return collaborationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.DelegationContext} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DelegationContextItemProvider delegationContextItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.DelegationContext}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDelegationContextAdapter() {
		if (delegationContextItemProvider == null) {
			delegationContextItemProvider = new DelegationContextItemProvider(this);
		}

		return delegationContextItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.Scenario} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScenarioItemProvider scenarioItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.Scenario}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScenarioAdapter() {
		if (scenarioItemProvider == null) {
			scenarioItemProvider = new ScenarioItemProvider(this);
		}

		return scenarioItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.ReleaseControl} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReleaseControlItemProvider releaseControlItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.ReleaseControl}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReleaseControlAdapter() {
		if (releaseControlItemProvider == null) {
			releaseControlItemProvider = new ReleaseControlItemProvider(this);
		}

		return releaseControlItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.CapabilityOffer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CapabilityOfferItemProvider capabilityOfferItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.CapabilityOffer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCapabilityOfferAdapter() {
		if (capabilityOfferItemProvider == null) {
			capabilityOfferItemProvider = new CapabilityOfferItemProvider(this);
		}

		return capabilityOfferItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.CapabilityMethod} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CapabilityMethodItemProvider capabilityMethodItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.CapabilityMethod}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCapabilityMethodAdapter() {
		if (capabilityMethodItemProvider == null) {
			capabilityMethodItemProvider = new CapabilityMethodItemProvider(this);
		}

		return capabilityMethodItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.Performer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PerformerItemProvider performerItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.Performer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPerformerAdapter() {
		if (performerItemProvider == null) {
			performerItemProvider = new PerformerItemProvider(this);
		}

		return performerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.Position} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PositionItemProvider positionItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.Position}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPositionAdapter() {
		if (positionItemProvider == null) {
			positionItemProvider = new PositionItemProvider(this);
		}

		return positionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.Pool} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PoolItemProvider poolItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.Pool}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPoolAdapter() {
		if (poolItemProvider == null) {
			poolItemProvider = new PoolItemProvider(this);
		}

		return poolItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.CalendarService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CalendarServiceItemProvider calendarServiceItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.CalendarService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCalendarServiceAdapter() {
		if (calendarServiceItemProvider == null) {
			calendarServiceItemProvider = new CalendarServiceItemProvider(this);
		}

		return calendarServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.ValueAdd} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueAddItemProvider valueAddItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.ValueAdd}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueAddAdapter() {
		if (valueAddItemProvider == null) {
			valueAddItemProvider = new ValueAddItemProvider(this);
		}

		return valueAddItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.ValuePropositionComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValuePropositionComponentItemProvider valuePropositionComponentItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.ValuePropositionComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValuePropositionComponentAdapter() {
		if (valuePropositionComponentItemProvider == null) {
			valuePropositionComponentItemProvider = new ValuePropositionComponentItemProvider(this);
		}

		return valuePropositionComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.OutputDelegation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutputDelegationItemProvider outputDelegationItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.OutputDelegation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutputDelegationAdapter() {
		if (outputDelegationItemProvider == null) {
			outputDelegationItemProvider = new OutputDelegationItemProvider(this);
		}

		return outputDelegationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.ValueProposition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValuePropositionItemProvider valuePropositionItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.ValueProposition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValuePropositionAdapter() {
		if (valuePropositionItemProvider == null) {
			valuePropositionItemProvider = new ValuePropositionItemProvider(this);
		}

		return valuePropositionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.PracticeLibrary} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PracticeLibraryItemProvider practiceLibraryItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.PracticeLibrary}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPracticeLibraryAdapter() {
		if (practiceLibraryItemProvider == null) {
			practiceLibraryItemProvider = new PracticeLibraryItemProvider(this);
		}

		return practiceLibraryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.BusinessNetwork} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessNetworkItemProvider businessNetworkItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.BusinessNetwork}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBusinessNetworkAdapter() {
		if (businessNetworkItemProvider == null) {
			businessNetworkItemProvider = new BusinessNetworkItemProvider(this);
		}

		return businessNetworkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.Party} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PartyItemProvider partyItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.Party}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPartyAdapter() {
		if (partyItemProvider == null) {
			partyItemProvider = new PartyItemProvider(this);
		}

		return partyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.Community} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommunityItemProvider communityItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.Community}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommunityAdapter() {
		if (communityItemProvider == null) {
			communityItemProvider = new CommunityItemProvider(this);
		}

		return communityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.Member} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MemberItemProvider memberItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.Member}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMemberAdapter() {
		if (memberItemProvider == null) {
			memberItemProvider = new MemberItemProvider(this);
		}

		return memberItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.Person} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PersonItemProvider personItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.Person}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPersonAdapter() {
		if (personItemProvider == null) {
			personItemProvider = new PersonItemProvider(this);
		}

		return personItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.CapabilityCategory} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CapabilityCategoryItemProvider capabilityCategoryItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.CapabilityCategory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCapabilityCategoryAdapter() {
		if (capabilityCategoryItemProvider == null) {
			capabilityCategoryItemProvider = new CapabilityCategoryItemProvider(this);
		}

		return capabilityCategoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.Integer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerItemProvider integerItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.Integer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerAdapter() {
		if (integerItemProvider == null) {
			integerItemProvider = new IntegerItemProvider(this);
		}

		return integerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.TargetRole} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TargetRoleItemProvider targetRoleItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.TargetRole}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTargetRoleAdapter() {
		if (targetRoleItemProvider == null) {
			targetRoleItemProvider = new TargetRoleItemProvider(this);
		}

		return targetRoleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.SourceRole} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SourceRoleItemProvider sourceRoleItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.SourceRole}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSourceRoleAdapter() {
		if (sourceRoleItemProvider == null) {
			sourceRoleItemProvider = new SourceRoleItemProvider(this);
		}

		return sourceRoleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.SourceTargetRole} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SourceTargetRoleItemProvider sourceTargetRoleItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.SourceTargetRole}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSourceTargetRoleAdapter() {
		if (sourceTargetRoleItemProvider == null) {
			sourceTargetRoleItemProvider = new SourceTargetRoleItemProvider(this);
		}

		return sourceTargetRoleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.ObValueProposition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObValuePropositionItemProvider obValuePropositionItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.ObValueProposition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObValuePropositionAdapter() {
		if (obValuePropositionItemProvider == null) {
			obValuePropositionItemProvider = new ObValuePropositionItemProvider(this);
		}

		return obValuePropositionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.SubValueProposition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubValuePropositionItemProvider subValuePropositionItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.SubValueProposition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubValuePropositionAdapter() {
		if (subValuePropositionItemProvider == null) {
			subValuePropositionItemProvider = new SubValuePropositionItemProvider(this);
		}

		return subValuePropositionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link vdml.SubObjValueProposition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubObjValuePropositionItemProvider subObjValuePropositionItemProvider;

	/**
	 * This creates an adapter for a {@link vdml.SubObjValueProposition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubObjValuePropositionAdapter() {
		if (subObjValuePropositionItemProvider == null) {
			subObjValuePropositionItemProvider = new SubObjValuePropositionItemProvider(this);
		}

		return subObjValuePropositionItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (valueDeliveryModelItemProvider != null) valueDeliveryModelItemProvider.dispose();
		if (stringItemProvider != null) stringItemProvider.dispose();
		if (attributeItemProvider != null) attributeItemProvider.dispose();
		if (annotationItemProvider != null) annotationItemProvider.dispose();
		if (valueLibraryItemProvider != null) valueLibraryItemProvider.dispose();
		if (valueDefinitionItemProvider != null) valueDefinitionItemProvider.dispose();
		if (valueCategoryItemProvider != null) valueCategoryItemProvider.dispose();
		if (capabilityLibraryItemProvider != null) capabilityLibraryItemProvider.dispose();
		if (capabilityDependencyItemProvider != null) capabilityDependencyItemProvider.dispose();
		if (businessItemDefinitionItemProvider != null) businessItemDefinitionItemProvider.dispose();
		if (practiceDefinitionItemProvider != null) practiceDefinitionItemProvider.dispose();
		if (practiceCategoryItemProvider != null) practiceCategoryItemProvider.dispose();
		if (capabilityDefinitionItemProvider != null) capabilityDefinitionItemProvider.dispose();
		if (businessItemCategoryItemProvider != null) businessItemCategoryItemProvider.dispose();
		if (businessItemLibraryItemProvider != null) businessItemLibraryItemProvider.dispose();
		if (actorItemProvider != null) actorItemProvider.dispose();
		if (measuredCharacteristicItemProvider != null) measuredCharacteristicItemProvider.dispose();
		if (assignmentItemProvider != null) assignmentItemProvider.dispose();
		if (roleItemProvider != null) roleItemProvider.dispose();
		if (activityItemProvider != null) activityItemProvider.dispose();
		if (expressionItemProvider != null) expressionItemProvider.dispose();
		if (operandItemProvider != null) operandItemProvider.dispose();
		if (goalItemProvider != null) goalItemProvider.dispose();
		if (resourceUseItemProvider != null) resourceUseItemProvider.dispose();
		if (outputPortItemProvider != null) outputPortItemProvider.dispose();
		if (deliverableFlowItemProvider != null) deliverableFlowItemProvider.dispose();
		if (inputPortItemProvider != null) inputPortItemProvider.dispose();
		if (inputDelegationItemProvider != null) inputDelegationItemProvider.dispose();
		if (businessItemItemProvider != null) businessItemItemProvider.dispose();
		if (storeItemProvider != null) storeItemProvider.dispose();
		if (orgUnitItemProvider != null) orgUnitItemProvider.dispose();
		if (collaborationItemProvider != null) collaborationItemProvider.dispose();
		if (delegationContextItemProvider != null) delegationContextItemProvider.dispose();
		if (scenarioItemProvider != null) scenarioItemProvider.dispose();
		if (releaseControlItemProvider != null) releaseControlItemProvider.dispose();
		if (capabilityOfferItemProvider != null) capabilityOfferItemProvider.dispose();
		if (capabilityMethodItemProvider != null) capabilityMethodItemProvider.dispose();
		if (performerItemProvider != null) performerItemProvider.dispose();
		if (positionItemProvider != null) positionItemProvider.dispose();
		if (poolItemProvider != null) poolItemProvider.dispose();
		if (calendarServiceItemProvider != null) calendarServiceItemProvider.dispose();
		if (valueAddItemProvider != null) valueAddItemProvider.dispose();
		if (valuePropositionComponentItemProvider != null) valuePropositionComponentItemProvider.dispose();
		if (outputDelegationItemProvider != null) outputDelegationItemProvider.dispose();
		if (valuePropositionItemProvider != null) valuePropositionItemProvider.dispose();
		if (practiceLibraryItemProvider != null) practiceLibraryItemProvider.dispose();
		if (businessNetworkItemProvider != null) businessNetworkItemProvider.dispose();
		if (partyItemProvider != null) partyItemProvider.dispose();
		if (communityItemProvider != null) communityItemProvider.dispose();
		if (memberItemProvider != null) memberItemProvider.dispose();
		if (personItemProvider != null) personItemProvider.dispose();
		if (capabilityCategoryItemProvider != null) capabilityCategoryItemProvider.dispose();
		if (integerItemProvider != null) integerItemProvider.dispose();
		if (targetRoleItemProvider != null) targetRoleItemProvider.dispose();
		if (sourceRoleItemProvider != null) sourceRoleItemProvider.dispose();
		if (sourceTargetRoleItemProvider != null) sourceTargetRoleItemProvider.dispose();
		if (obValuePropositionItemProvider != null) obValuePropositionItemProvider.dispose();
		if (subValuePropositionItemProvider != null) subValuePropositionItemProvider.dispose();
		if (subObjValuePropositionItemProvider != null) subObjValuePropositionItemProvider.dispose();
	}

}
